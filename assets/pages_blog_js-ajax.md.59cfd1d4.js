import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.76cdd7a0.js";const A=JSON.parse('{"title":"原生 AJAX 的异步请求","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"pages/blog/js-ajax.md","lastUpdated":1696919743000}'),t={name:"pages/blog/js-ajax.md"},p=l(`<h1 id="原生-ajax-的异步请求" tabindex="-1">原生 AJAX 的异步请求 <a class="header-anchor" href="#原生-ajax-的异步请求" aria-label="Permalink to &quot;原生 AJAX 的异步请求&quot;">​</a></h1><blockquote><p>AJAX 是 Asynchronous JavaScript And XML 的缩写，即异步 JavaScript 和 XML 技术，并不是一门新的语言或技术，可以在无需重新加载整个网页的情况下，实现更新部分网页。</p></blockquote><h2 id="一、创建-xmlhttprequest-对象" tabindex="-1">一、创建 XMLHttpRequest 对象 <a class="header-anchor" href="#一、创建-xmlhttprequest-对象" aria-label="Permalink to &quot;一、创建 XMLHttpRequest 对象&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 创建自定义变量，用于存储 XMLHttpRequest 对象的实例</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> xmlhttp</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 避免浏览器不兼容</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (window</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">XMLHttpRequest) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// IE7+、Firefox、Chrome、Safari 以及 Opera</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">xmlhttp</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">XMLHttpRequest</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// IE5、IE6</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">xmlhttp</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">ActiveXObject</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Microsoft.XMLHTTP</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="二、请求" tabindex="-1">二、请求 <a class="header-anchor" href="#二、请求" aria-label="Permalink to &quot;二、请求&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//  打开请求</span></span>
<span class="line"><span style="color:#A6ACCD;">xmlhttp</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">open</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">GET</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./data/data.txt</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// xmlhttp.open(method, url, async);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// method 	请求的类型，如常用的 get 和 post</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// url 		处理响应文件的路径</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// async	是否使用异步处理，布尔数据类型</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 发送请求</span></span>
<span class="line"><span style="color:#A6ACCD;">xmlhttp</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">send</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="三、响应" tabindex="-1">三、响应 <a class="header-anchor" href="#三、响应" aria-label="Permalink to &quot;三、响应&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 字符串形式的响应数据</span></span>
<span class="line"><span style="color:#A6ACCD;">xmlhttp</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">responseText</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// XML形式的响应数据</span></span>
<span class="line"><span style="color:#A6ACCD;">xmlhttp</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">responseXML</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="四、onreadystatechange-事件" tabindex="-1">四、onreadystatechange 事件 <a class="header-anchor" href="#四、onreadystatechange-事件" aria-label="Permalink to &quot;四、onreadystatechange 事件&quot;">​</a></h2><ul><li>onreadystatechange：监测 XMLHTTP 请求的状态（readyState）信息事件，一旦 readyState 发生改变即调用该事件。</li><li>readyState 请求状态表如下：</li></ul><table><thead><tr><th style="text-align:center;">状态</th><th style="text-align:center;">含义</th></tr></thead><tbody><tr><td style="text-align:center;">0</td><td style="text-align:center;">请求未初始化</td></tr><tr><td style="text-align:center;">1</td><td style="text-align:center;">服务器连接已建立</td></tr><tr><td style="text-align:center;">2</td><td style="text-align:center;">请求已接收</td></tr><tr><td style="text-align:center;">3</td><td style="text-align:center;">请求处理中</td></tr><tr><td style="text-align:center;">4</td><td style="text-align:center;">请求已完成，且响应已就绪</td></tr></tbody></table><ul><li>status 状态码：</li></ul><table><thead><tr><th style="text-align:center;">状态码</th><th style="text-align:center;">含义</th></tr></thead><tbody><tr><td style="text-align:center;">200</td><td style="text-align:center;">“OK”</td></tr><tr><td style="text-align:center;">304</td><td style="text-align:center;">未修改</td></tr><tr><td style="text-align:center;">403</td><td style="text-align:center;">禁止</td></tr><tr><td style="text-align:center;">404</td><td style="text-align:center;">未找到页面</td></tr><tr><td style="text-align:center;">500</td><td style="text-align:center;">内部服务器错误</td></tr></tbody></table><p><em>需要了解更多的状态码信息不妨观看： <a href="https://blog.csdn.net/weixin_44808483/article/details/105216356" target="_blank" rel="noreferrer">HTTP_请求信息与响应信息</a></em></p><ul><li>结合使用</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">xmlhttp</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onreadystatechange</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">xmlhttp</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">readyState</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">4</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">xmlhttp</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">status</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">200</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 这里是异步之后的执行的内容</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><h2 id="五、小案例" tabindex="-1">五、小案例 <a class="header-anchor" href="#五、小案例" aria-label="Permalink to &quot;五、小案例&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;!</span><span style="color:#A6ACCD;">DOCTYPE html</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">html</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">charset</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">UTF-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">viewport</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">content</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">width=device-width, initial-scale=1.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Demo</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">js/index.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;!-- </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">module</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">js/mian.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> --&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;use strict&quot;;</span></span>
<span class="line"><span style="color:#A6ACCD;">    /*</span></span>
<span class="line"><span style="color:#A6ACCD;">      读取本地 json 文件的数据</span></span>
<span class="line"><span style="color:#A6ACCD;">	  1.读取 data.txt 中的内容</span></span>
<span class="line"><span style="color:#A6ACCD;">   	  2.打印在 body 节点上</span></span>
<span class="line"><span style="color:#A6ACCD;">	*/</span></span>
<span class="line"><span style="color:#A6ACCD;">    const xhr = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    // 这里的 url 是需要读取的文件路径</span></span>
<span class="line"><span style="color:#A6ACCD;">    xhr.open(&quot;GET&quot;, &quot;./data/data.json&quot;, true);</span></span>
<span class="line"><span style="color:#A6ACCD;">    xhr.send();</span></span>
<span class="line"><span style="color:#A6ACCD;">    xhr.onreadystatechange = function () </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#82AAFF;">if</span><span style="color:#A6ACCD;"> (xhr</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">readyState </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> xhr</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">status </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">xhr.status == 200</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;">// 把响应的内容打印在 body 上</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">body</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">innerHTML</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">xhr</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">responseText</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">html</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p><em>注： 运行 AJAX 的时候需要在服务器环境上才可以运行，不然会报错，这里可以在 vscode 添加 live server 插件，并使用该插件运行代码即可。</em></p>`,19),o=[p];function e(c,r,y,D,F,i){return a(),n("div",null,o)}const d=s(t,[["render",e]]);export{A as __pageData,d as default};
