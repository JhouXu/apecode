import{m as t,l as n,c as e,b as l,g as i,k as h,ak as p,j as d}from"./chunks/framework.B-iYIpxV.js";const b=JSON.parse('{"title":"NVS 包管理器","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"blog/nvs.md","filePath":"blog/nvs.md","lastUpdated":1754106445000}'),k={name:"blog/nvs.md"};function r(o,s,c,g,F,v){const a=n("PageInfo");return l(),e("div",null,[s[0]||(s[0]=i("h1",{id:"nvs-包管理器",tabindex:"-1"},[d("NVS 包管理器 "),i("a",{class:"header-anchor",href:"#nvs-包管理器","aria-label":'Permalink to "NVS 包管理器"'},"​")],-1)),h(a,{readingTime:"1",wordCount:"414",publicTime:"2025-08-02"}),s[1]||(s[1]=p(`<p><code>NVS</code>（Node Version Switcher）是一个跨平台的 Node.js 版本管理器，类似于 <code>nvm</code>，但支持 Windows、macOS 和 Linux，并且通过 PowerShell 和 Bash 脚本实现，速度更快，配置更灵活。</p><p><a href="https://github.com/jasongin/nvs" target="_blank" rel="noreferrer">👉 官方仓库</a></p><h2 id="特点" tabindex="-1">特点 <a class="header-anchor" href="#特点" aria-label="Permalink to &quot;特点&quot;">​</a></h2><ul><li>✅ 支持跨平台（Windows / macOS / Linux）</li><li>✅ 支持 <code>.nvmrc</code> 文件</li><li>✅ 支持 LTS、最新版本自动获取</li><li>✅ 支持按需加载（不全局污染）</li><li>✅ 可设置为 shell 自动加载所需 Node 版本</li></ul><h2 id="安装方式" tabindex="-1">安装方式 <a class="header-anchor" href="#安装方式" aria-label="Permalink to &quot;安装方式&quot;">​</a></h2><ol><li>Windows 安装</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/jasongin/nvs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --depth=1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:LOCALAPPDATA\\nvs&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&amp; $env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:LOCALAPPDATA</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nvs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nvs.ps1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><p>之后重启终端，或将以下路径加入环境变量：</p><div class="language-makefile vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">makefile</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">C</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:\\Users\\&lt;username&gt;\\AppData\\Local\\nvs</span></span></code></pre></div><ol start="2"><li>macOS / Linux 安装</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/jasongin/nvs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.nvs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --depth=1</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.nvs/nvs.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><p>然后在 <code>.bashrc</code> / <code>.zshrc</code> 中加入：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.nvs/nvs.sh</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">❓ PowerShell 报错：“无法加载文件，因为在此系统上禁止运行脚本”</p><p>这是因为 PowerShell 默认禁止脚本运行。</p><p>解决方案：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Set-ExecutionPolicy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> RemoteSigned</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Scope</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CurrentUser</span></span></code></pre></div><p>然后输入 <code>Y</code> 确认。</p></div><h2 id="基本命令" tabindex="-1">基本命令 <a class="header-anchor" href="#基本命令" aria-label="Permalink to &quot;基本命令&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">versio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 安装某个版本的 Node.js</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> use</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">versio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 切换当前 shell 使用的版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">versio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 使用某版本直接运行 node/npm 命令</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                  # 查看已安装版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              # 查看可安装的远程版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">versio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 删除某个版本</span></span></code></pre></div><h2 id="nvmrc-文件支持" tabindex="-1">.nvmrc 文件支持 <a class="header-anchor" href="#nvmrc-文件支持" aria-label="Permalink to &quot;.nvmrc 文件支持&quot;">​</a></h2><p>NVS 支持 .nvmrc，可以实现根据项目指定 Node 版本：</p><p>确保根目录存在 .nvmrc 文件，内容是 Node 版本号，如：</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="./.nvmrc">./.nvmrc</span></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>v10.15.3</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 可以省略 v</span></span>
<span class="line"><span># 10.15.3</span></span></code></pre></div></div><p>然后在终端执行 <code>nvs use</code> 命令，NVS 会自动切换到指定版本：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> use</span></span></code></pre></div><h2 id="和-nvm-区别" tabindex="-1">和 NVM 区别 <a class="header-anchor" href="#和-nvm-区别" aria-label="Permalink to &quot;和 NVM 区别&quot;">​</a></h2><table tabindex="0"><thead><tr><th>特性</th><th>NVS</th><th>NVM</th></tr></thead><tbody><tr><td>跨平台支持</td><td>✅ Windows / macOS / Linux</td><td>❌ Windows 需用 nvm-windows</td></tr><tr><td>安装方式</td><td>Git clone + 脚本</td><td>安装脚本</td></tr><tr><td><code>.nvmrc</code> 支持</td><td>✅ 支持</td><td>✅ 支持</td></tr><tr><td>自动切换版本</td><td>✅ <code>nvs auto</code></td><td>❌ 需额外配置</td></tr><tr><td>安装体积</td><td>小，按需加载</td><td>通常较大</td></tr><tr><td>配置方式</td><td>Bash / PowerShell</td><td>Bash / Zsh</td></tr></tbody></table><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>NVS 是一个现代、轻量级、跨平台的 Node.js 版本管理器，适合需要在不同项目之间频繁切换 Node 版本的开发者。相比 NVM 更加灵活且适配 Windows，对于多系统开发者尤其推荐。</p>`,26))])}const u=t(k,[["render",r]]);export{b as __pageData,u as default};
